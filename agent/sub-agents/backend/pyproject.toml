[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "backend-agent"
version = "1.0.0"
description = "Advanced Backend Agent for Google ADK with comprehensive server-side capabilities"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    {name = "Backend Agent Team", email = "team@backendagent.com"},
]
keywords = ["agent", "backend", "api", "database", "authentication", "google-adk"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Database",
    "Topic :: System :: Systems Administration :: Authentication/Directory",
]

dependencies = [
    "google-adk>=1.0.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "httpx>=0.25.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.0.0",
    "pandas>=2.0.0",
    "asyncpg>=0.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
cloud = [
    "google-cloud-storage>=2.10.0",
    "boto3>=1.28.0",
    "azure-storage-blob>=12.17.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "sentry-sdk>=1.32.0",
    "structlog>=23.1.0",
]
ml = [
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
]

[project.urls]
Homepage = "https://github.com/backend-agent/backend-agent"
Documentation = "https://backend-agent.readthedocs.io/"
Repository = "https://github.com/backend-agent/backend-agent.git"
"Bug Tracker" = "https://github.com/backend-agent/backend-agent/issues"

[project.scripts]
backend-agent = "backend_agent.cli:main"

[tool.hatch.version]
path = "backend_agent/__init__.py"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend_agent"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=backend_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend_agent"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
